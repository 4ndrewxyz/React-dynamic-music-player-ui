{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/Documents/GitHub/music-player/src/components/MusicPlayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { getPalette } from 'color-thief-react';\nimport AnimatedBackground from './AnimatedBackground';\nimport tracks from '../data/tracks.js';\nimport '../styles/MusicPlayer.css';\nimport '../styles/AnimatedBackground.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicPlayer = () => {\n  _s();\n  const [trackIndex, setTrackIndex] = useState(0);\n  const [currentTrack, setCurrentTrack] = useState(tracks[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [colors, setColors] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const audioRef = useRef(new Audio(currentTrack.audioSrc));\n  const intervalRef = useRef(null);\n\n  // Memoize the nextTrack function\n  const nextTrack = useCallback(() => {\n    const newIndex = (trackIndex + 1) % tracks.length;\n    setTrackIndex(newIndex);\n    setCurrentTrack(tracks[newIndex]);\n  }, [trackIndex]);\n\n  // Memoize previous track function as well\n  const prevTrack = useCallback(() => {\n    const newIndex = (trackIndex - 1 + tracks.length) % tracks.length;\n    setTrackIndex(newIndex);\n    setCurrentTrack(tracks[newIndex]);\n  }, [trackIndex]);\n\n  // Memoize the startTimer function\n  const startTimer = useCallback(() => {\n    clearInterval(intervalRef.current);\n    intervalRef.current = setInterval(() => {\n      if (audioRef.current.ended) {\n        nextTrack();\n      } else {\n        setCurrentTime(audioRef.current.currentTime);\n        setProgress(audioRef.current.currentTime / audioRef.current.duration * 100);\n      }\n    }, 1000);\n  }, [nextTrack]);\n\n  // Alternative approach - generate variations of colors\n\n  useEffect(() => {\n    const fetchColors = async () => {\n      try {\n        // Extract base colors from the album art\n        const palette = await getPalette(currentTrack.albumArt, 3, 'hex', {\n          crossOrigin: 'anonymous',\n          quality: 10\n        });\n\n        // Filter out white/very light colors\n        const filteredBase = palette.filter(color => {\n          const hex = color.replace('#', '');\n          const r = parseInt(hex.substr(0, 2), 16);\n          const g = parseInt(hex.substr(2, 2), 16);\n          const b = parseInt(hex.substr(4, 2), 16);\n          const brightness = 0.299 * r + 0.587 * g + 0.114 * b;\n          return brightness < 180;\n        });\n\n        // If we have at least one good color, generate variations\n        if (filteredBase.length > 0) {\n          const generatedPalette = generateColorVariations(filteredBase);\n          setColors(generatedPalette);\n          console.log('Generated color palette:', generatedPalette);\n        } else {\n          // Fallback to preset vibrant colors\n          setColors(['#355c7d', '#6c5b7b', '#c06c84', '#f67280', '#f8b195']);\n        }\n      } catch (error) {\n        console.error('Failed to extract colors:', error);\n        setColors(['#355c7d', '#6c5b7b', '#c06c84', '#f67280', '#f8b195']);\n      }\n    };\n    fetchColors();\n  }, [currentTrack.albumArt]);\n\n  // Helper function to generate color variations\n  const generateColorVariations = baseColors => {\n    const result = [...baseColors]; // Start with the base colors\n\n    // For each base color, generate variations\n    baseColors.forEach(color => {\n      // Extract RGB\n      const hex = color.replace('#', '');\n      let r = parseInt(hex.substr(0, 2), 16);\n      let g = parseInt(hex.substr(2, 2), 16);\n      let b = parseInt(hex.substr(4, 2), 16);\n\n      // Generate a darker variant\n      const darker = `#${Math.max(0, r - 30).toString(16).padStart(2, '0')}${Math.max(0, g - 30).toString(16).padStart(2, '0')}${Math.max(0, b - 30).toString(16).padStart(2, '0')}`;\n\n      // Generate a variant with shifted hue\n      // Simple hue shift by modifying RGB values\n      const shifted = `#${Math.min(255, g).toString(16).padStart(2, '0')}${Math.min(255, b).toString(16).padStart(2, '0')}${Math.min(255, r).toString(16).padStart(2, '0')}`;\n      result.push(darker, shifted);\n    });\n\n    // Return up to 8 colors\n    return result.slice(0, 8);\n  };\n\n  // Add this to the color processing code\n\n  // Helper function to ensure vibrant colors\n  const ensureVibrantColors = palette => {\n    return palette.map(color => {\n      // Convert hex to RGB\n      const hex = color.replace('#', '');\n      let r = parseInt(hex.substr(0, 2), 16);\n      let g = parseInt(hex.substr(2, 2), 16);\n      let b = parseInt(hex.substr(4, 2), 16);\n\n      // Convert RGB to HSL to boost saturation\n      const [h, s, l] = rgbToHsl(r, g, b);\n\n      // Boost saturation if it's too low\n      const newS = s < 0.5 ? Math.min(1, s + 0.3) : s;\n\n      // Convert back to RGB\n      const [newR, newG, newB] = hslToRgb(h, newS, l);\n\n      // Convert back to hex\n      return `#${newR.toString(16).padStart(2, '0')}${newG.toString(16).padStart(2, '0')}${newB.toString(16).padStart(2, '0')}`;\n    });\n  };\n\n  // RGB to HSL conversion\n  const rgbToHsl = (r, g, b) => {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h,\n      s,\n      l = (max + min) / 2;\n    if (max === min) {\n      h = s = 0; // achromatic\n    } else {\n      const d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n      switch (max) {\n        case r:\n          h = (g - b) / d + (g < b ? 6 : 0);\n          break;\n        case g:\n          h = (b - r) / d + 2;\n          break;\n        case b:\n          h = (r - g) / d + 4;\n          break;\n        default:\n          h = 0;\n      }\n      h /= 6;\n    }\n    return [h, s, l];\n  };\n\n  // HSL to RGB conversion\n  const hslToRgb = (h, s, l) => {\n    let r, g, b;\n    if (s === 0) {\n      r = g = b = l; // achromatic\n    } else {\n      const hue2rgb = (p, q, t) => {\n        if (t < 0) t += 1;\n        if (t > 1) t -= 1;\n        if (t < 1 / 6) return p + (q - p) * 6 * t;\n        if (t < 1 / 2) return q;\n        if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n        return p;\n      };\n      const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      const p = 2 * l - q;\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n    return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n  };\n  if (filteredPalette.length >= 5) {\n    // Ensure colors are vibrant\n    const vibrantPalette = ensureVibrantColors(filteredPalette);\n    setColors(vibrantPalette);\n    console.log('Using vibrant colors:', vibrantPalette);\n  } else {\n    // Not enough colors, use fallback\n  }\n\n  // Handle track loading and setup\n  useEffect(() => {\n    audioRef.current.pause();\n    audioRef.current = new Audio(currentTrack.audioSrc);\n    audioRef.current.addEventListener('loadedmetadata', () => {\n      setDuration(audioRef.current.duration);\n    });\n    audioRef.current.addEventListener('ended', nextTrack);\n    if (isPlaying) {\n      audioRef.current.play().catch(e => console.error(\"Error playing audio:\", e));\n      startTimer();\n    }\n    return () => {\n      audioRef.current.removeEventListener('loadedmetadata', () => {});\n      audioRef.current.removeEventListener('ended', nextTrack);\n      clearInterval(intervalRef.current);\n    };\n  }, [currentTrack, isPlaying, nextTrack, startTimer]);\n\n  // Handle play/pause\n  useEffect(() => {\n    if (isPlaying) {\n      audioRef.current.play().catch(e => console.error(\"Error playing audio:\", e));\n      startTimer();\n    } else {\n      audioRef.current.pause();\n      clearInterval(intervalRef.current);\n    }\n  }, [isPlaying, startTimer]);\n\n  // Cleanup when component unmounts\n  useEffect(() => {\n    return () => {\n      audioRef.current.pause();\n      clearInterval(intervalRef.current);\n    };\n  }, []);\n\n  // Toggle play/pause\n  const togglePlay = () => {\n    setIsPlaying(!isPlaying);\n  };\n\n  // Change track position on progress bar click\n  const onProgressChange = e => {\n    const progressBar = e.currentTarget;\n    const clickPosition = (e.clientX - progressBar.getBoundingClientRect().left) / progressBar.offsetWidth;\n    const newTime = clickPosition * audioRef.current.duration;\n    audioRef.current.currentTime = newTime;\n    setCurrentTime(newTime);\n    setProgress(clickPosition * 100);\n  };\n\n  // Format time\n  const formatTime = time => {\n    if (time && !isNaN(time)) {\n      const minutes = Math.floor(time / 60);\n      const seconds = Math.floor(time % 60);\n      return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n    }\n    return \"0:00\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-container\",\n    children: [/*#__PURE__*/_jsxDEV(AnimatedBackground, {\n      colors: colors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"music-player\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"album-cover\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentTrack.albumArt,\n          alt: `${currentTrack.album} cover`,\n          crossOrigin: \"anonymous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"track-title\",\n            children: currentTrack.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"track-artist\",\n            children: currentTrack.artist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            onClick: onProgressChange,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress\",\n              style: {\n                width: `${progress}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"current-time\",\n              children: formatTime(currentTime)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"total-time\",\n              children: formatTime(duration) || currentTrack.duration\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-button\",\n            onClick: prevTrack,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M12.066 11.2a1 1 0 000 1.6l5.334 4A1 1 0 0019 16V8a1 1 0 00-1.6-.8l-5.333 4zM4.066 11.2a1 1 0 000 1.6l5.334 4A1 1 0 0011 16V8a1 1 0 00-1.6-.8l-5.334 4z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-button play-button\",\n            onClick: togglePlay,\n            children: isPlaying ? /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-button\",\n            onClick: nextTrack,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M11.933 12.8a1 1 0 000-1.6L6.6 7.2A1 1 0 005 8v8a1 1 0 001.6.8l5.333-4zM19.933 12.8a1 1 0 000-1.6l-5.333-4A1 1 0 0013 8v8a1 1 0 001.6.8l5.333-4z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 5\n  }, this);\n};\n_s(MusicPlayer, \"sVFfQZUP1b/W5JczJMjGcFJWBFg=\");\n_c = MusicPlayer;\nexport default MusicPlayer;\nvar _c;\n$RefreshReg$(_c, \"MusicPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","getPalette","AnimatedBackground","tracks","jsxDEV","_jsxDEV","MusicPlayer","_s","trackIndex","setTrackIndex","currentTrack","setCurrentTrack","isPlaying","setIsPlaying","colors","setColors","progress","setProgress","duration","setDuration","currentTime","setCurrentTime","audioRef","Audio","audioSrc","intervalRef","nextTrack","newIndex","length","prevTrack","startTimer","clearInterval","current","setInterval","ended","fetchColors","palette","albumArt","crossOrigin","quality","filteredBase","filter","color","hex","replace","r","parseInt","substr","g","b","brightness","generatedPalette","generateColorVariations","console","log","error","baseColors","result","forEach","darker","Math","max","toString","padStart","shifted","min","push","slice","ensureVibrantColors","map","h","s","l","rgbToHsl","newS","newR","newG","newB","hslToRgb","d","hue2rgb","p","q","t","round","filteredPalette","vibrantPalette","pause","addEventListener","play","catch","e","removeEventListener","togglePlay","onProgressChange","progressBar","currentTarget","clickPosition","clientX","getBoundingClientRect","left","offsetWidth","newTime","formatTime","time","isNaN","minutes","floor","seconds","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","album","title","artist","onClick","style","width","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","_c","$RefreshReg$"],"sources":["/Users/andrew/Documents/GitHub/music-player/src/components/MusicPlayer.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { getPalette } from 'color-thief-react';\nimport AnimatedBackground from './AnimatedBackground';\nimport tracks from '../data/tracks.js';\nimport '../styles/MusicPlayer.css';\nimport '../styles/AnimatedBackground.css';\n\nconst MusicPlayer = () => {\n  const [trackIndex, setTrackIndex] = useState(0);\n  const [currentTrack, setCurrentTrack] = useState(tracks[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [colors, setColors] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  \n  const audioRef = useRef(new Audio(currentTrack.audioSrc));\n  const intervalRef = useRef(null);\n\n  // Memoize the nextTrack function\n  const nextTrack = useCallback(() => {\n    const newIndex = (trackIndex + 1) % tracks.length;\n    setTrackIndex(newIndex);\n    setCurrentTrack(tracks[newIndex]);\n  }, [trackIndex]);\n\n  // Memoize previous track function as well\n  const prevTrack = useCallback(() => {\n    const newIndex = (trackIndex - 1 + tracks.length) % tracks.length;\n    setTrackIndex(newIndex);\n    setCurrentTrack(tracks[newIndex]);\n  }, [trackIndex]);\n\n  // Memoize the startTimer function\n  const startTimer = useCallback(() => {\n    clearInterval(intervalRef.current);\n    \n    intervalRef.current = setInterval(() => {\n      if (audioRef.current.ended) {\n        nextTrack();\n      } else {\n        setCurrentTime(audioRef.current.currentTime);\n        setProgress((audioRef.current.currentTime / audioRef.current.duration) * 100);\n      }\n    }, 1000);\n  }, [nextTrack]);\n\n\n// Alternative approach - generate variations of colors\n\nuseEffect(() => {\n    const fetchColors = async () => {\n      try {\n        // Extract base colors from the album art\n        const palette = await getPalette(currentTrack.albumArt, 3, 'hex', {\n          crossOrigin: 'anonymous',\n          quality: 10,\n        });\n        \n        // Filter out white/very light colors\n        const filteredBase = palette.filter(color => {\n          const hex = color.replace('#', '');\n          const r = parseInt(hex.substr(0, 2), 16);\n          const g = parseInt(hex.substr(2, 2), 16);\n          const b = parseInt(hex.substr(4, 2), 16);\n          const brightness = (0.299 * r + 0.587 * g + 0.114 * b);\n          return brightness < 180;\n        });\n        \n        // If we have at least one good color, generate variations\n        if (filteredBase.length > 0) {\n          const generatedPalette = generateColorVariations(filteredBase);\n          setColors(generatedPalette);\n          console.log('Generated color palette:', generatedPalette);\n        } else {\n          // Fallback to preset vibrant colors\n          setColors(['#355c7d', '#6c5b7b', '#c06c84', '#f67280', '#f8b195']);\n        }\n      } catch (error) {\n        console.error('Failed to extract colors:', error);\n        setColors(['#355c7d', '#6c5b7b', '#c06c84', '#f67280', '#f8b195']);\n      }\n    };\n    \n    fetchColors();\n  }, [currentTrack.albumArt]);\n  \n  // Helper function to generate color variations\n  const generateColorVariations = (baseColors) => {\n    const result = [...baseColors]; // Start with the base colors\n    \n    // For each base color, generate variations\n    baseColors.forEach(color => {\n      // Extract RGB\n      const hex = color.replace('#', '');\n      let r = parseInt(hex.substr(0, 2), 16);\n      let g = parseInt(hex.substr(2, 2), 16);\n      let b = parseInt(hex.substr(4, 2), 16);\n      \n      // Generate a darker variant\n      const darker = `#${Math.max(0, r - 30).toString(16).padStart(2, '0')}${\n        Math.max(0, g - 30).toString(16).padStart(2, '0')}${\n        Math.max(0, b - 30).toString(16).padStart(2, '0')}`;\n      \n      // Generate a variant with shifted hue\n      // Simple hue shift by modifying RGB values\n      const shifted = `#${Math.min(255, g).toString(16).padStart(2, '0')}${\n        Math.min(255, b).toString(16).padStart(2, '0')}${\n        Math.min(255, r).toString(16).padStart(2, '0')}`;\n      \n      result.push(darker, shifted);\n    });\n    \n    // Return up to 8 colors\n    return result.slice(0, 8);\n  };\n\n  // Add this to the color processing code\n\n// Helper function to ensure vibrant colors\nconst ensureVibrantColors = (palette) => {\n    return palette.map(color => {\n      // Convert hex to RGB\n      const hex = color.replace('#', '');\n      let r = parseInt(hex.substr(0, 2), 16);\n      let g = parseInt(hex.substr(2, 2), 16);\n      let b = parseInt(hex.substr(4, 2), 16);\n      \n      // Convert RGB to HSL to boost saturation\n      const [h, s, l] = rgbToHsl(r, g, b);\n      \n      // Boost saturation if it's too low\n      const newS = s < 0.5 ? Math.min(1, s + 0.3) : s;\n      \n      // Convert back to RGB\n      const [newR, newG, newB] = hslToRgb(h, newS, l);\n      \n      // Convert back to hex\n      return `#${newR.toString(16).padStart(2, '0')}${\n        newG.toString(16).padStart(2, '0')}${\n        newB.toString(16).padStart(2, '0')}`;\n    });\n  };\n  \n  // RGB to HSL conversion\n  const rgbToHsl = (r, g, b) => {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    \n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h, s, l = (max + min) / 2;\n    \n    if (max === min) {\n      h = s = 0; // achromatic\n    } else {\n      const d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n      \n      switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n        default: h = 0;\n      }\n      \n      h /= 6;\n    }\n    \n    return [h, s, l];\n  };\n  \n  // HSL to RGB conversion\n  const hslToRgb = (h, s, l) => {\n    let r, g, b;\n    \n    if (s === 0) {\n      r = g = b = l; // achromatic\n    } else {\n      const hue2rgb = (p, q, t) => {\n        if (t < 0) t += 1;\n        if (t > 1) t -= 1;\n        if (t < 1/6) return p + (q - p) * 6 * t;\n        if (t < 1/2) return q;\n        if (t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n        return p;\n      };\n      \n      const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      const p = 2 * l - q;\n      \n      r = hue2rgb(p, q, h + 1/3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1/3);\n    }\n    \n    return [\n      Math.round(r * 255),\n      Math.round(g * 255),\n      Math.round(b * 255)\n    ];\n  };\n\n  if (filteredPalette.length >= 5) {\n    // Ensure colors are vibrant\n    const vibrantPalette = ensureVibrantColors(filteredPalette);\n    setColors(vibrantPalette);\n    console.log('Using vibrant colors:', vibrantPalette);\n  } else {\n    // Not enough colors, use fallback\n  }\n       \n\n  // Handle track loading and setup\n  useEffect(() => {\n    audioRef.current.pause();\n    audioRef.current = new Audio(currentTrack.audioSrc);\n    \n    audioRef.current.addEventListener('loadedmetadata', () => {\n      setDuration(audioRef.current.duration);\n    });\n    \n    audioRef.current.addEventListener('ended', nextTrack);\n    \n    if (isPlaying) {\n      audioRef.current.play().catch(e => console.error(\"Error playing audio:\", e));\n      startTimer();\n    }\n    \n    return () => {\n      audioRef.current.removeEventListener('loadedmetadata', () => {});\n      audioRef.current.removeEventListener('ended', nextTrack);\n      clearInterval(intervalRef.current);\n    };\n  }, [currentTrack, isPlaying, nextTrack, startTimer]);\n\n  // Handle play/pause\n  useEffect(() => {\n    if (isPlaying) {\n      audioRef.current.play().catch(e => console.error(\"Error playing audio:\", e));\n      startTimer();\n    } else {\n      audioRef.current.pause();\n      clearInterval(intervalRef.current);\n    }\n  }, [isPlaying, startTimer]);\n\n  // Cleanup when component unmounts\n  useEffect(() => {\n    return () => {\n      audioRef.current.pause();\n      clearInterval(intervalRef.current);\n    };\n  }, []);\n\n  // Toggle play/pause\n  const togglePlay = () => {\n    setIsPlaying(!isPlaying);\n  };\n\n  // Change track position on progress bar click\n  const onProgressChange = (e) => {\n    const progressBar = e.currentTarget;\n    const clickPosition = (e.clientX - progressBar.getBoundingClientRect().left) / progressBar.offsetWidth;\n    const newTime = clickPosition * audioRef.current.duration;\n    \n    audioRef.current.currentTime = newTime;\n    setCurrentTime(newTime);\n    setProgress(clickPosition * 100);\n  };\n\n  // Format time\n  const formatTime = (time) => {\n    if (time && !isNaN(time)) {\n      const minutes = Math.floor(time / 60);\n      const seconds = Math.floor(time % 60);\n      return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n    }\n    return \"0:00\";\n  };\n\n  return (\n    <div className=\"player-container\">\n      {/* Animated background component */}\n      <AnimatedBackground colors={colors} />\n      \n      <div className=\"music-player\">\n        <div className=\"album-cover\">\n          <img \n            src={currentTrack.albumArt} \n            alt={`${currentTrack.album} cover`}\n            crossOrigin=\"anonymous\" \n          />\n        </div>\n        \n        <div className=\"player-controls\">\n          <div className=\"track-info\">\n            <h2 className=\"track-title\">{currentTrack.title}</h2>\n            <p className=\"track-artist\">{currentTrack.artist}</p>\n          </div>\n          \n          <div className=\"progress-container\">\n            <div className=\"progress-bar\" onClick={onProgressChange}>\n              <div className=\"progress\" style={{ width: `${progress}%` }}></div>\n            </div>\n            <div className=\"time-info\">\n              <span className=\"current-time\">{formatTime(currentTime)}</span>\n              <span className=\"total-time\">{formatTime(duration) || currentTrack.duration}</span>\n            </div>\n          </div>\n          \n          <div className=\"control-buttons\">\n            <button className=\"control-button\" onClick={prevTrack}>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12.066 11.2a1 1 0 000 1.6l5.334 4A1 1 0 0019 16V8a1 1 0 00-1.6-.8l-5.333 4zM4.066 11.2a1 1 0 000 1.6l5.334 4A1 1 0 0011 16V8a1 1 0 00-1.6-.8l-5.334 4z\" />\n              </svg>\n            </button>\n            \n            <button className=\"control-button play-button\" onClick={togglePlay}>\n              {isPlaying ? (\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n              ) : (\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z\" />\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n              )}\n            </button>\n            \n            <button className=\"control-button\" onClick={nextTrack}>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11.933 12.8a1 1 0 000-1.6L6.6 7.2A1 1 0 005 8v8a1 1 0 001.6.8l5.333-4zM19.933 12.8a1 1 0 000-1.6l-5.333-4A1 1 0 0013 8v8a1 1 0 001.6.8l5.333-4z\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MusicPlayer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}